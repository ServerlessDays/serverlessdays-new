scalar DateTime
scalar URL
scalar Email 

type SocialLinks {
    name: String
    icon: URL
    link: URL
}

type Speaker {
    id: ID!
    name: String!
    organisation: String
    nationality: String
    bio: String
    profilePic: URL
    status: Status
    social: [SocialLinks]
    createdAt: DateTime
    modifiedAt: DateTime
}

type Room {
    id: ID!
    name: String!
    description: String
    layout: String
    capacity: Int
    facilities: [String]
    accessibility: [String]
    createdAt: DateTime
    modifiedAt: DateTime
}

type Venue {
    id: ID!
    name: String!
    address: String
    city: String
    image: URL
    rooms: [Room]
    createdAt: DateTime
    modifiedAt: DateTime
}

enum Status {
    PUBLISHED,
    DRAFT,
    ARCHIVED
}

type Session {
    id: ID!
    name: String
    description: String
    speakers: [Speaker]
    video: URL
    status: Status
    createdAt: DateTime
    modifiedAt: DateTime
}

type DayAgenda {
    date: DateTime
    startTime: DateTime
    endTime: DateTime
    session: Session
    description: String
    createdAt: DateTime
    modifiedAt: DateTime
}

type EventAgenda {
    id: ID!
    eventId: ID
    DayAgendas: [DayAgenda]
}

type SponsorContacts {
    name: String!
    title: String!
    email: Email
    phone: String
    location: String
}

type Sponsor {
    name: String
    logo: URL
    description: URL
    contact: [SponsorContacts]
    createdAt: DateTime
    modifiedAt: DateTime
}

type Milestone {
    description: String!
    date: DateTime!
}

type Event {
    id: ID!
    name: String!
    description: String
    startDate: DateTime
    endDate: DateTime
    logo: URL
    hero: URL
    tagline: String
    milestones: [Milestone]
    createdAt: DateTime
    modifiedAt: DateTime
}

type EventSponsors {
    id: ID!
    eventId: ID
    sponsor: Sponsor
    tier: String
    createdAt: DateTime
    modifiedAt: DateTime
}

type Query {
    getEvent (id: ID!): Event
}